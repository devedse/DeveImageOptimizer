name: GitHubActionsBuildDockerTest

on:
  workflow_dispatch:
    inputs:
      releaseNotes:
        description: 'The release notes (just as a test)'
        required: false

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: "1234"
    steps:
    - name: Just a message
      run: echo "Set version to 1234"


  build_docker_linux:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveImageOptimizer.ConsoleApp/Linux.Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/deveimageoptimizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveimageoptimizerconsoleapp:latest --push .

  build_docker_linux_qemu520:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:qemu-v5.2.0
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveImageOptimizer.ConsoleApp/Linux.Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/deveimageoptimizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveimageoptimizerconsoleapp:latest --push .

  build_docker_linux_crazymax_600rc4:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: crazymax/binfmt:v6.0.0-rc4
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveImageOptimizer.ConsoleApp/Linux.Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/deveimageoptimizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveimageoptimizerconsoleapp:latest --push .

  build_docker_linux_tonistiigi_600:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:qemu-v6.0.0
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveImageOptimizer.ConsoleApp/Linux.Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/deveimageoptimizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveimageoptimizerconsoleapp:latest --push .

  build_docker_linux_qusbuild:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Setup qus
      run: |
        docker run --rm --privileged aptman/qus -s -- -p
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveImageOptimizer.ConsoleApp/Linux.Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/deveimageoptimizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveimageoptimizerconsoleapp:latest --push .

  test_docker_linux_qemudefault:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Test docker run
      run: |
        docker pull --platform linux/arm64 devedse/deveimageoptimizerconsoleapp
        docker run --rm devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  test_docker_linux_qemu520:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:qemu-v5.2.0
        platforms: all
    - name: Test docker run
      run: |
        docker pull --platform linux/arm64 devedse/deveimageoptimizerconsoleapp
        docker run --rm -t devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  test_docker_linux_qemu_crazymax_600rc4:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: crazymax/binfmt:v6.0.0-rc4
        platforms: all
    - name: Test docker run
      run: |
        docker pull --platform linux/arm64 devedse/deveimageoptimizerconsoleapp
        docker run --rm -t devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  test_docker_linux_qemu_tonistiigi_600:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:qemu-v6.0.0
        platforms: all
    - name: Test docker run
      run: |
        docker pull --platform linux/arm64 devedse/deveimageoptimizerconsoleapp
        docker run --rm -t devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  test_docker_linuxqus:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup qus
      run: |
        docker run --rm --privileged aptman/qus -s -- -p
    - name: Test docker run
      run: |
        docker pull --platform linux/arm64 devedse/deveimageoptimizerconsoleapp
        docker run --rm -t devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  test_docker_linuxnoqemu:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test docker run
      run: |
        docker pull --platform linux/arm64 devedse/deveimageoptimizerconsoleapp
        docker run --rm -t devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  test_docker_linuxnoqemu_amd64image:
    needs: [generate_version_number, build_docker_linux]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Test docker run
      run: |
        docker pull --platform linux/amd64 devedse/deveimageoptimizerconsoleapp
        docker run --rm -t devedse/deveimageoptimizerconsoleapp
        #docker run --rm --entrypoint /root/hangover/build/wine-host/loader/wine devedse/deveimageoptimizerconsoleapp:latest /root/hangover/build/qemu/x86_64-windows-user/qemu-x86_64.exe.so "/root/.wine/drive_c/Program Files/FileOptimizer/Plugins64/jpegoptim.exe" -o --all-progressive "/app/TestImage.jpg"

  build_docker_windows:
    needs: generate_version_number
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     username: devedse
    #     password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Login to GitHub Package Registry #TODO replace with docker-login action when https://github.com/docker/login-action/issues/47
      run: echo ${{ secrets.DOCKERHUBTOKEN }} | docker login -u devedse --password-stdin
    # - name: Set up QEMU
    #   id: qemu
    #   uses: docker/setup-qemu-action@v2
    #   with:
    #     image: tonistiigi/binfmt:latest
    #     platforms: all
    # - name: Available platforms
    #   run: echo ${{ steps.qemu.outputs.platforms }}
    # - name: Set up Docker Buildx
    #   id: buildx
    #   uses: docker/setup-buildx-action@v1
    # - name: Builder instance name
    #   run: echo ${{ steps.buildx.outputs.name }}
    # - name: Available platforms
    #   run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Build
      run: |
        $env:VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        Write-Host Version: $env:VERSION
        docker build -f DeveImageOptimizer.ConsoleApp/WindowsServer.Dockerfile --build-arg BUILD_VERSION=$env:VERSION --platform windows/amd64 -t devedse/deveimageoptimizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveimageoptimizerconsoleappwindows:latest .
