
#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/sdk:6.0 AS base
ARG TARGETPLATFORM
#ENV NOTESTS 1
#ENV PKG_CONFIG aarch64-linux-gnu-pkg-config
#ENV CROSS_TRIPLE aarch64-linux-gnu
#ENV HANGOVER_WINE_CC aarch64-linux-gnu-clang
#ENV HANGOVER_WINE_CXX aarch64-linux-gnu-clang++
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
        echo hallo amd64 ; \
        dpkg --add-architecture i386 && apt-get update && apt-get install wine wget -y ; \
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
        echo hallo arm64 ; \
    elif [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then \
        echo hallo armv7 ; \
    else \
        echo $TARGETPLATFORM ; \
    fi
RUN if [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
        git clone --recurse-submodules -j8 https://github.com/AndreRH/hangover.git /root/hangover ; \
    fi
RUN if [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
    wget -O /root/buildfolder_build_arm64.tar.gz --no-verbose https://github.com/devedse/hangover/releases/latest/download/buildfolder_build_arm64.tar.gz ; \
    tar -C /root/hangover -zxvf /root/buildfolder_build_arm64.tar.gz ; \
fi
RUN wget -O /root/FileOptimizerSetup.exe https://sourceforge.net/projects/nikkhokkho/files/latest/download
#RUN wine /root/FileOptimizerSetup.exe /S
#RUN rm /root/FileOptimizerSetup.exe
ENV FILEOPTIMIZERPATH="/root/.wine/drive_c/Program Files/FileOptimizer/FileOptimizer64.exe"
WORKDIR /app

FROM mcr.microsoft.com/dotnet/sdk:6.0-bullseye-slim-amd64 AS build
WORKDIR /src
COPY ["NuGet.config", "NuGet.config"]
COPY ["DeveImageOptimizer.ConsoleApp/DeveImageOptimizer.ConsoleApp.csproj", "DeveImageOptimizer.ConsoleApp/"]
COPY ["DeveImageOptimizer/DeveImageOptimizer.csproj", "DeveImageOptimizer/"]
RUN dotnet restore "DeveImageOptimizer.ConsoleApp/DeveImageOptimizer.ConsoleApp.csproj"
COPY . .
WORKDIR "/src/DeveImageOptimizer.ConsoleApp"
#RUN dotnet build "DeveImageOptimizer.ConsoleApp.csproj" -c Release -o /app/build

FROM build AS publish
ARG BUILD_VERSION
ARG VER=${BUILD_VERSION:-1.0.0}
#RUN dotnet publish "DeveImageOptimizer.ConsoleApp.csproj" -c Release -o /app/publish /p:Version=$VER

FROM base AS final
WORKDIR /app
#COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "DeveImageOptimizer.ConsoleApp.dll"]